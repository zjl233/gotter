// Code generated by entc, DO NOT EDIT.

package user

import (
	"time"

	"github.com/facebookincubator/ent"
	"github.com/zjl233/gotter/ent/schema"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at vertex property in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at vertex property in the database.
	FieldUpdatedAt = "updated_at"
	// FieldUsername holds the string denoting the username vertex property in the database.
	FieldUsername = "username"
	// FieldPasswordHash holds the string denoting the password_hash vertex property in the database.
	FieldPasswordHash = "password_hash"

	// Table holds the table name of the user in the database.
	Table = "users"
	// TokensTable is the table the holds the tokens relation/edge.
	TokensTable = "auth_tokens"
	// TokensInverseTable is the table name for the AuthToken entity.
	// It exists in this package in order to avoid circular dependency with the "authtoken" package.
	TokensInverseTable = "auth_tokens"
	// TokensColumn is the table column denoting the tokens relation/edge.
	TokensColumn = "user_tokens"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldUsername,
	FieldPasswordHash,
}

var (
	mixin       = schema.User{}.Mixin()
	mixinFields = [...][]ent.Field{
		mixin[0].Fields(),
	}
	fields = schema.User{}.Fields()

	// descCreatedAt is the schema descriptor for created_at field.
	descCreatedAt = mixinFields[0][0].Descriptor()
	// DefaultCreatedAt holds the default value on creation for the created_at field.
	DefaultCreatedAt = descCreatedAt.Default.(func() time.Time)

	// descUpdatedAt is the schema descriptor for updated_at field.
	descUpdatedAt = mixinFields[0][1].Descriptor()
	// DefaultUpdatedAt holds the default value on creation for the updated_at field.
	DefaultUpdatedAt = descUpdatedAt.Default.(func() time.Time)
	// UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	UpdateDefaultUpdatedAt = descUpdatedAt.UpdateDefault.(func() time.Time)

	// descUsername is the schema descriptor for username field.
	descUsername = fields[0].Descriptor()
	// UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	UsernameValidator = func() func(string) error {
		validators := descUsername.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
			validators[2].(func(string) error),
		}
		return func(username string) error {
			for _, fn := range fns {
				if err := fn(username); err != nil {
					return err
				}
			}
			return nil
		}
	}()
)
