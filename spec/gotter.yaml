openapi: "3.0.0"
info:
  version: 1.0.0
  title: Gotter API
  description: A twitter clone app
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:3001
paths:
  /auth:
    get:
      security:
        - bearerAuth: []
      description: just a auth test
      responses:
        "200":
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /posts:
    get:
      summary: Returns all posts
      description: Returns all posts from the system that the user has access to
      operationId: findPosts
      parameters:
        - name: offset
          in: query
          description: set first post to return
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: posts response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Post"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Creates a new post
      description: Creates a new post in the store. Duplicates are allowed
      operationId: addPost
      requestBody:
        description: Post to add to the store
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewPost"
      responses:
        "201":
          description: post response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /posts/{id}:
    get:
      summary: Returns a post by ID
      description: Returns a post based on a single ID
      operationId: findPostByID
      parameters:
        - name: id
          in: path
          description: ID of post to fetch
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: post response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Deletes a post by ID
      description: deletes a single post based on the ID supplied
      operationId: deletePostByID
      parameters:
        - name: id
          in: path
          description: ID of post to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: post deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Post:
      allOf:
        - $ref: "#/components/schemas/NewPost"
        - required:
            - id
          properties:
            id:
              type: integer
              format: int64
              description: Unique id of the post

    NewPost:
      required:
        - content
      properties:
        content:
          type: string
          description: content of the post

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message

  responses:
    UnauthorizedError:
      description: Access token is missing or invalid

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
