// Package api provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"time"
)

// Author defines model for Author.
type Author struct {

	// Unique id of the post
	Id         int    `json:"_id"`
	Account    string `json:"account"`
	Name       string `json:"name"`
	ProfileImg string `json:"profileImg"`
}

// Comment defines model for Comment.
type Comment struct {
	Id      int       `json:"_id"`
	Content string    `json:"content"`
	Created time.Time `json:"created"`
	User    Author    `json:"user"`
}

// NewUser defines model for NewUser.
type NewUser struct {

	// User name, Unique, cannot change
	Account string `json:"account"`

	// User's nickname
	Name string `json:"name"`

	// User password, at least 8 character
	Password string `json:"password"`

	// Must same as password
	Password2 string `json:"password2"`
}

// Post defines model for Post.
type Post struct {

	// Unique id of the post
	Id       int       `json:"_id"`
	Author   Author    `json:"author"`
	Comments []int     `json:"comments"`
	Content  string    `json:"content"`
	Created  time.Time `json:"created"`
	Likes    []int     `json:"likes"`
}

// PostExp defines model for PostExp.
type PostExp struct {

	// Unique id of the post
	Id     int `json:"_id"`
	Author struct {

		// Unique id of the post
		Id          int    `json:"_id"`
		Account     string `json:"account"`
		IsFollowing bool   `json:"isFollowing"`
		Name        string `json:"name"`
		ProfileImg  string `json:"profileImg"`
	} `json:"author"`
	Comments []Comment `json:"comments"`
	Content  string    `json:"content"`
	Created  time.Time `json:"created"`
	Likes    []Author  `json:"likes"`
}

// User defines model for User.
type User struct {

	// Unique id of the post
	Id         int    `json:"_id"`
	Account    string `json:"account"`
	BkgWallImg string `json:"bkgWallImg"`
	Follower   []int  `json:"follower"`
	Following  []int  `json:"following"`
	Name       string `json:"name"`
	Posts      []int  `json:"posts"`
	ProfileImg string `json:"profileImg"`
}

// Account defines model for account.
type Account string

// Id defines model for id.
type Id int

// XAuth defines model for x-auth.
type XAuth string

// Error defines model for Error.
type Error struct {
	Err map[string]interface{} `json:"err"`

	// Error message
	ErrMsg string `json:"errMsg"`
	Result bool   `json:"result"`
}

// CreateCommentJSONBody defines parameters for CreateComment.
type CreateCommentJSONBody struct {
	Content string `json:"content"`
}

// CreateCommentParams defines parameters for CreateComment.
type CreateCommentParams struct {

	// jwt auth
	XAuth XAuth `json:"x-auth"`
}

// ProfileInfoParams defines parameters for ProfileInfo.
type ProfileInfoParams struct {

	// jwt auth
	XAuth XAuth `json:"x-auth"`
}

// ListProfilePostsParams defines parameters for ListProfilePosts.
type ListProfilePostsParams struct {

	// jwt auth
	XAuth XAuth `json:"x-auth"`
}

// CreatePostJSONBody defines parameters for CreatePost.
type CreatePostJSONBody struct {
	Content string `json:"content"`
}

// CreatePostParams defines parameters for CreatePost.
type CreatePostParams struct {

	// jwt auth
	XAuth XAuth `json:"x-auth"`
}

// ShowPostParams defines parameters for ShowPost.
type ShowPostParams struct {

	// jwt auth
	XAuth XAuth `json:"x-auth"`
}

// RefreshParams defines parameters for Refresh.
type RefreshParams struct {

	// jwt auth
	XAuth XAuth `json:"x-auth"`
}

// SignUpJSONBody defines parameters for SignUp.
type SignUpJSONBody NewUser

// DeleteFollowParams defines parameters for DeleteFollow.
type DeleteFollowParams struct {

	// jwt auth
	XAuth XAuth `json:"x-auth"`
}

// CreateFollowParams defines parameters for CreateFollow.
type CreateFollowParams struct {

	// jwt auth
	XAuth XAuth `json:"x-auth"`
}

// InfoParams defines parameters for Info.
type InfoParams struct {

	// jwt auth
	XAuth XAuth `json:"x-auth"`
}

// LoginJSONBody defines parameters for Login.
type LoginJSONBody struct {
	Account  string `json:"account"`
	Password string `json:"password"`
}

// ListPostsParams defines parameters for ListPosts.
type ListPostsParams struct {

	// jwt auth
	XAuth XAuth `json:"x-auth"`
}

// CreateCommentRequestBody defines body for CreateComment for application/json ContentType.
type CreateCommentJSONRequestBody CreateCommentJSONBody

// CreatePostRequestBody defines body for CreatePost for application/json ContentType.
type CreatePostJSONRequestBody CreatePostJSONBody

// SignUpRequestBody defines body for SignUp for application/json ContentType.
type SignUpJSONRequestBody SignUpJSONBody

// LoginRequestBody defines body for Login for application/json ContentType.
type LoginJSONRequestBody LoginJSONBody
